export const ClankerLocker_v4_abi = [
  {
    type: 'constructor',
    inputs: [
      { name: 'owner_', type: 'address', internalType: 'address' },
      { name: 'factory_', type: 'address', internalType: 'address' },
      { name: 'feeLocker_', type: 'address', internalType: 'address' },
      { name: 'positionManager_', type: 'address', internalType: 'address' },
      { name: 'permit2_', type: 'address', internalType: 'address' },
      { name: 'universalRouter_', type: 'address', internalType: 'address' },
      { name: 'poolManager_', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'BASIS_POINTS',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MAX_LP_POSITIONS',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MAX_REWARD_PARTICIPANTS',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'collectRewards',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'collectRewardsWithoutUnlock',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'factory',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'feeLocker',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IClankerFeeLocker' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'feePreferences',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      {
        name: 'feePreference',
        type: 'uint8',
        internalType: 'enum IClankerLpLockerFeeConversion.FeeIn',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'onERC721Received',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
      { name: '', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [{ name: '', type: 'bytes4', internalType: 'bytes4' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'permit2',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IPermit2' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'placeLiquidity',
    inputs: [
      {
        name: 'lockerConfig',
        type: 'tuple',
        internalType: 'struct IClanker.LockerConfig',
        components: [
          { name: 'locker', type: 'address', internalType: 'address' },
          { name: 'rewardAdmins', type: 'address[]', internalType: 'address[]' },
          { name: 'rewardRecipients', type: 'address[]', internalType: 'address[]' },
          { name: 'rewardBps', type: 'uint16[]', internalType: 'uint16[]' },
          { name: 'tickLower', type: 'int24[]', internalType: 'int24[]' },
          { name: 'tickUpper', type: 'int24[]', internalType: 'int24[]' },
          { name: 'positionBps', type: 'uint16[]', internalType: 'uint16[]' },
          { name: 'lockerData', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'poolConfig',
        type: 'tuple',
        internalType: 'struct IClanker.PoolConfig',
        components: [
          { name: 'hook', type: 'address', internalType: 'address' },
          { name: 'pairedToken', type: 'address', internalType: 'address' },
          { name: 'tickIfToken0IsClanker', type: 'int24', internalType: 'int24' },
          { name: 'tickSpacing', type: 'int24', internalType: 'int24' },
          { name: 'poolData', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'poolKey',
        type: 'tuple',
        internalType: 'struct PoolKey',
        components: [
          { name: 'currency0', type: 'address', internalType: 'Currency' },
          { name: 'currency1', type: 'address', internalType: 'Currency' },
          { name: 'fee', type: 'uint24', internalType: 'uint24' },
          { name: 'tickSpacing', type: 'int24', internalType: 'int24' },
          { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
        ],
      },
      { name: 'poolSupply', type: 'uint256', internalType: 'uint256' },
      { name: 'token', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'positionId', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'poolManager',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IPoolManager' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'positionManager',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IPositionManager' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'tokenRewards',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct IClankerLpLocker.TokenRewardInfo',
        components: [
          { name: 'token', type: 'address', internalType: 'address' },
          {
            name: 'poolKey',
            type: 'tuple',
            internalType: 'struct PoolKey',
            components: [
              { name: 'currency0', type: 'address', internalType: 'Currency' },
              { name: 'currency1', type: 'address', internalType: 'Currency' },
              { name: 'fee', type: 'uint24', internalType: 'uint24' },
              { name: 'tickSpacing', type: 'int24', internalType: 'int24' },
              { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
            ],
          },
          { name: 'positionId', type: 'uint256', internalType: 'uint256' },
          { name: 'numPositions', type: 'uint256', internalType: 'uint256' },
          { name: 'rewardBps', type: 'uint16[]', internalType: 'uint16[]' },
          { name: 'rewardAdmins', type: 'address[]', internalType: 'address[]' },
          { name: 'rewardRecipients', type: 'address[]', internalType: 'address[]' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'universalRouter',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IUniversalRouter' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'updateFeePreference',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'rewardIndex', type: 'uint256', internalType: 'uint256' },
      {
        name: 'newFeePreference',
        type: 'uint8',
        internalType: 'enum IClankerLpLockerFeeConversion.FeeIn',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateRewardAdmin',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'rewardIndex', type: 'uint256', internalType: 'uint256' },
      { name: 'newAdmin', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateRewardRecipient',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'rewardIndex', type: 'uint256', internalType: 'uint256' },
      { name: 'newRecipient', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'version',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'withdrawERC20',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'recipient', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawETH',
    inputs: [{ name: 'recipient', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'ClaimedRewards',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'amount0', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'amount1', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'rewards0', type: 'uint256[]', indexed: false, internalType: 'uint256[]' },
      { name: 'rewards1', type: 'uint256[]', indexed: false, internalType: 'uint256[]' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'FeePreferenceUpdated',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'rewardIndex', type: 'uint256', indexed: true, internalType: 'uint256' },
      {
        name: 'oldFeePreference',
        type: 'uint8',
        indexed: false,
        internalType: 'enum IClankerLpLockerFeeConversion.FeeIn',
      },
      {
        name: 'newFeePreference',
        type: 'uint8',
        indexed: true,
        internalType: 'enum IClankerLpLockerFeeConversion.FeeIn',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'FeesSwapped',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'rewardToken', type: 'address', indexed: true, internalType: 'address' },
      { name: 'amountSwapped', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'swappedToken', type: 'address', indexed: true, internalType: 'address' },
      { name: 'amountOut', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'InitialFeePreferences',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'feePreference',
        type: 'uint8[]',
        indexed: false,
        internalType: 'enum IClankerLpLockerFeeConversion.FeeIn[]',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Received',
    inputs: [
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      { name: 'positionId', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RewardAdminUpdated',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'rewardIndex', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'oldAdmin', type: 'address', indexed: false, internalType: 'address' },
      { name: 'newAdmin', type: 'address', indexed: false, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RewardRecipientUpdated',
    inputs: [
      { name: 'token', type: 'address', indexed: true, internalType: 'address' },
      { name: 'rewardIndex', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'oldRecipient', type: 'address', indexed: false, internalType: 'address' },
      { name: 'newRecipient', type: 'address', indexed: false, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TokenRewardAdded',
    inputs: [
      { name: 'token', type: 'address', indexed: false, internalType: 'address' },
      {
        name: 'poolKey',
        type: 'tuple',
        indexed: false,
        internalType: 'struct PoolKey',
        components: [
          { name: 'currency0', type: 'address', internalType: 'Currency' },
          { name: 'currency1', type: 'address', internalType: 'Currency' },
          { name: 'fee', type: 'uint24', internalType: 'uint24' },
          { name: 'tickSpacing', type: 'int24', internalType: 'int24' },
          { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
        ],
      },
      { name: 'poolSupply', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'positionId', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'numPositions', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'rewardBps', type: 'uint16[]', indexed: false, internalType: 'uint16[]' },
      { name: 'rewardAdmins', type: 'address[]', indexed: false, internalType: 'address[]' },
      { name: 'rewardRecipients', type: 'address[]', indexed: false, internalType: 'address[]' },
      { name: 'tickLower', type: 'int24[]', indexed: false, internalType: 'int24[]' },
      { name: 'tickUpper', type: 'int24[]', indexed: false, internalType: 'int24[]' },
      { name: 'positionBps', type: 'uint16[]', indexed: false, internalType: 'uint16[]' },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'InvalidPositionBps', inputs: [] },
  { type: 'error', name: 'InvalidRewardBps', inputs: [] },
  { type: 'error', name: 'MismatchedPositionInfos', inputs: [] },
  { type: 'error', name: 'MismatchedRewardArrays', inputs: [] },
  { type: 'error', name: 'NoPositions', inputs: [] },
  { type: 'error', name: 'NoRewardRecipients', inputs: [] },
  {
    type: 'error',
    name: 'OwnableInvalidOwner',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'ReentrancyGuardReentrantCall', inputs: [] },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'TickRangeLowerThanStartingTick', inputs: [] },
  { type: 'error', name: 'TicksBackwards', inputs: [] },
  { type: 'error', name: 'TicksNotMultipleOfTickSpacing', inputs: [] },
  { type: 'error', name: 'TicksOutOfTickBounds', inputs: [] },
  { type: 'error', name: 'TokenAlreadyHasRewards', inputs: [] },
  { type: 'error', name: 'TooManyPositions', inputs: [] },
  { type: 'error', name: 'TooManyRewardParticipants', inputs: [] },
  { type: 'error', name: 'Unauthorized', inputs: [] },
  { type: 'error', name: 'ZeroRewardAddress', inputs: [] },
  { type: 'error', name: 'ZeroRewardAmount', inputs: [] },
] as const;

export const ClankerLpLocker_Instantiation_v4_abi = [
  {
    type: 'tuple',
    components: [{ type: 'uint8[]', name: 'feePreference' }],
  },
] as const;
