export const ClankerLpLockerMultiple_abi = [
  {
    inputs: [
      { internalType: 'address', name: 'owner_', type: 'address' },
      { internalType: 'address', name: 'factory_', type: 'address' },
      { internalType: 'address', name: 'feeLocker_', type: 'address' },
      { internalType: 'address', name: 'positionManager_', type: 'address' },
      { internalType: 'address', name: 'permit2_', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'InvalidPositionBps', type: 'error' },
  { inputs: [], name: 'InvalidRewardBps', type: 'error' },
  { inputs: [], name: 'MismatchedPositionInfos', type: 'error' },
  { inputs: [], name: 'MismatchedRewardArrays', type: 'error' },
  { inputs: [], name: 'NoPositions', type: 'error' },
  { inputs: [], name: 'NoRewardRecipients', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  { inputs: [], name: 'TickRangeLowerThanStartingTick', type: 'error' },
  { inputs: [], name: 'TicksBackwards', type: 'error' },
  { inputs: [], name: 'TicksNotMultipleOfTickSpacing', type: 'error' },
  { inputs: [], name: 'TicksOutOfTickBounds', type: 'error' },
  { inputs: [], name: 'TokenAlreadyHasRewards', type: 'error' },
  { inputs: [], name: 'TooManyPositions', type: 'error' },
  { inputs: [], name: 'TooManyRewardParticipants', type: 'error' },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  { inputs: [], name: 'ZeroRewardAddress', type: 'error' },
  { inputs: [], name: 'ZeroRewardAmount', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount0', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amount1', type: 'uint256' },
      { indexed: false, internalType: 'uint256[]', name: 'rewards0', type: 'uint256[]' },
      { indexed: false, internalType: 'uint256[]', name: 'rewards1', type: 'uint256[]' },
    ],
    name: 'ClaimedRewards',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'positionId', type: 'uint256' },
    ],
    name: 'Received',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'token', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'rewardIndex', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'oldAdmin', type: 'address' },
      { indexed: false, internalType: 'address', name: 'newAdmin', type: 'address' },
    ],
    name: 'RewardAdminUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'token', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'rewardIndex', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'oldRecipient', type: 'address' },
      { indexed: false, internalType: 'address', name: 'newRecipient', type: 'address' },
    ],
    name: 'RewardRecipientUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        indexed: false,
        internalType: 'struct PoolKey',
        name: 'poolKey',
        type: 'tuple',
      },
      { indexed: false, internalType: 'uint256', name: 'poolSupply', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'positionId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'numPositions', type: 'uint256' },
      { indexed: false, internalType: 'uint16[]', name: 'rewardBps', type: 'uint16[]' },
      { indexed: false, internalType: 'address[]', name: 'rewardAdmins', type: 'address[]' },
      { indexed: false, internalType: 'address[]', name: 'rewardRecipients', type: 'address[]' },
      { indexed: false, internalType: 'int24[]', name: 'tickLower', type: 'int24[]' },
      { indexed: false, internalType: 'int24[]', name: 'tickUpper', type: 'int24[]' },
      { indexed: false, internalType: 'uint16[]', name: 'positionBps', type: 'uint16[]' },
    ],
    name: 'TokenRewardAdded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BASIS_POINTS',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_LP_POSITIONS',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_REWARD_PARTICIPANTS',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'collectRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'collectRewardsWithoutUnlock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeLocker',
    outputs: [{ internalType: 'contract IClankerFeeLocker', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'permit2',
    outputs: [{ internalType: 'contract IPermit2', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'locker', type: 'address' },
          { internalType: 'address[]', name: 'rewardAdmins', type: 'address[]' },
          { internalType: 'address[]', name: 'rewardRecipients', type: 'address[]' },
          { internalType: 'uint16[]', name: 'rewardBps', type: 'uint16[]' },
          { internalType: 'int24[]', name: 'tickLower', type: 'int24[]' },
          { internalType: 'int24[]', name: 'tickUpper', type: 'int24[]' },
          { internalType: 'uint16[]', name: 'positionBps', type: 'uint16[]' },
          { internalType: 'bytes', name: 'lockerData', type: 'bytes' },
        ],
        internalType: 'struct IClanker.LockerConfig',
        name: 'lockerConfig',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'address', name: 'hook', type: 'address' },
          { internalType: 'address', name: 'pairedToken', type: 'address' },
          { internalType: 'int24', name: 'tickIfToken0IsClanker', type: 'int24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'bytes', name: 'poolData', type: 'bytes' },
        ],
        internalType: 'struct IClanker.PoolConfig',
        name: 'poolConfig',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: 'poolKey',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'poolSupply', type: 'uint256' },
      { internalType: 'address', name: 'token', type: 'address' },
    ],
    name: 'placeLiquidity',
    outputs: [{ internalType: 'uint256', name: 'positionId', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'positionManager',
    outputs: [{ internalType: 'contract IPositionManager', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'tokenRewards',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'token', type: 'address' },
          {
            components: [
              { internalType: 'Currency', name: 'currency0', type: 'address' },
              { internalType: 'Currency', name: 'currency1', type: 'address' },
              { internalType: 'uint24', name: 'fee', type: 'uint24' },
              { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
              { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
            ],
            internalType: 'struct PoolKey',
            name: 'poolKey',
            type: 'tuple',
          },
          { internalType: 'uint256', name: 'positionId', type: 'uint256' },
          { internalType: 'uint256', name: 'numPositions', type: 'uint256' },
          { internalType: 'uint16[]', name: 'rewardBps', type: 'uint16[]' },
          { internalType: 'address[]', name: 'rewardAdmins', type: 'address[]' },
          { internalType: 'address[]', name: 'rewardRecipients', type: 'address[]' },
        ],
        internalType: 'struct IClankerLpLocker.TokenRewardInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'uint256', name: 'rewardIndex', type: 'uint256' },
      { internalType: 'address', name: 'newAdmin', type: 'address' },
    ],
    name: 'updateRewardAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'uint256', name: 'rewardIndex', type: 'uint256' },
      { internalType: 'address', name: 'newRecipient', type: 'address' },
    ],
    name: 'updateRewardRecipient',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'address', name: 'recipient', type: 'address' },
    ],
    name: 'withdrawERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'recipient', type: 'address' }],
    name: 'withdrawETH',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];
