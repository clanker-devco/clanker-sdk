export const ClankerAirdrop_v4_abi = [
  {
    inputs: [{ internalType: 'address', name: 'factory_', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AirdropAlreadyExists', type: 'error' },
  { inputs: [], name: 'AirdropLockupDurationTooShort', type: 'error' },
  { inputs: [], name: 'AirdropNotUnlocked', type: 'error' },
  { inputs: [], name: 'InvalidAirdropPercentage', type: 'error' },
  { inputs: [], name: 'InvalidMerkleRoot', type: 'error' },
  { inputs: [], name: 'InvalidMsgValue', type: 'error' },
  { inputs: [], name: 'InvalidProof', type: 'error' },
  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
  { inputs: [], name: 'TotalMaxClaimed', type: 'error' },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  { inputs: [], name: 'UserMaxClaimed', type: 'error' },
  { inputs: [], name: 'ZeroClaim', type: 'error' },
  { inputs: [], name: 'ZeroToClaim', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'token', type: 'address' },
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'totalUserAmountClaimed', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'userAmountStillLocked', type: 'uint256' },
    ],
    name: 'AirdropClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'bytes32', name: 'merkleRoot', type: 'bytes32' },
      { indexed: false, internalType: 'uint256', name: 'supply', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'lockupDuration', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'vestingDuration', type: 'uint256' },
    ],
    name: 'AirdropCreated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MIN_LOCKUP_DURATION',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'airdrops',
    outputs: [
      { internalType: 'bytes32', name: 'merkleRoot', type: 'bytes32' },
      { internalType: 'uint256', name: 'totalSupply', type: 'uint256' },
      { internalType: 'uint256', name: 'totalClaimed', type: 'uint256' },
      { internalType: 'uint256', name: 'lockupEndTime', type: 'uint256' },
      { internalType: 'uint256', name: 'vestingEndTime', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'address', name: 'recipient', type: 'address' },
      { internalType: 'uint256', name: 'allocatedAmount', type: 'uint256' },
    ],
    name: 'amountAvailableToClaim',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'address', name: 'recipient', type: 'address' },
      { internalType: 'uint256', name: 'allocatedAmount', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              { internalType: 'address', name: 'tokenAdmin', type: 'address' },
              { internalType: 'string', name: 'name', type: 'string' },
              { internalType: 'string', name: 'symbol', type: 'string' },
              { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
              { internalType: 'string', name: 'image', type: 'string' },
              { internalType: 'string', name: 'metadata', type: 'string' },
              { internalType: 'string', name: 'context', type: 'string' },
              { internalType: 'uint256', name: 'originatingChainId', type: 'uint256' },
            ],
            internalType: 'struct IClanker.TokenConfig',
            name: 'tokenConfig',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'hook', type: 'address' },
              { internalType: 'address', name: 'pairedToken', type: 'address' },
              { internalType: 'int24', name: 'tickIfToken0IsClanker', type: 'int24' },
              { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
              { internalType: 'bytes', name: 'poolData', type: 'bytes' },
            ],
            internalType: 'struct IClanker.PoolConfig',
            name: 'poolConfig',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'locker', type: 'address' },
              { internalType: 'address[]', name: 'rewardAdmins', type: 'address[]' },
              { internalType: 'address[]', name: 'rewardRecipients', type: 'address[]' },
              { internalType: 'uint16[]', name: 'rewardBps', type: 'uint16[]' },
              { internalType: 'int24[]', name: 'tickLower', type: 'int24[]' },
              { internalType: 'int24[]', name: 'tickUpper', type: 'int24[]' },
              { internalType: 'uint16[]', name: 'positionBps', type: 'uint16[]' },
              { internalType: 'bytes', name: 'lockerData', type: 'bytes' },
            ],
            internalType: 'struct IClanker.LockerConfig',
            name: 'lockerConfig',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'mevModule', type: 'address' },
              { internalType: 'bytes', name: 'mevModuleData', type: 'bytes' },
            ],
            internalType: 'struct IClanker.MevModuleConfig',
            name: 'mevModuleConfig',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'extension', type: 'address' },
              { internalType: 'uint256', name: 'msgValue', type: 'uint256' },
              { internalType: 'uint16', name: 'extensionBps', type: 'uint16' },
              { internalType: 'bytes', name: 'extensionData', type: 'bytes' },
            ],
            internalType: 'struct IClanker.ExtensionConfig[]',
            name: 'extensionConfigs',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClanker.DeploymentConfig',
        name: 'deploymentConfig',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'int24', name: 'tickSpacing', type: 'int24' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
        ],
        internalType: 'struct PoolKey',
        name: '',
        type: 'tuple',
      },
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'uint256', name: 'extensionSupply', type: 'uint256' },
      { internalType: 'uint256', name: 'extensionIndex', type: 'uint256' },
    ],
    name: 'receiveTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

export const ClankerAirdrop_Instantiation_v4_abi = [
  { type: 'bytes32' },
  { type: 'uint256' },
  { type: 'uint256' },
] as const;
